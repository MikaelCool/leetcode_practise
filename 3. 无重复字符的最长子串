题目：
给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串的长度。

示例 1:
输入: s = "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。

示例 2:
输入: s = "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。

示例 3:
输入: s = "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。请注意，你的答案必须是子串的长度，"pwke" 是一个子序列，不是子串。
 
提示：
0 <= s.length <= 5 * 104
s 由英文字母、数字、符号和空格组成


代码：
int lengthOfLongestSubstring(char * s){
    //Hash
    int hash[127] = {0};

    //双指针
    int left = 0;
    int right = 0;
    int max = 0;//存储最大长度

    //循环遍历数组
    while (s[right])
    {
        if (hash[s[right]] && left < hash[s[right]])//右侧有重复
        {
            left = hash[s[right]];//左侧向前移动
        }

        hash[s[right]] = right + 1;
        max = max < (right - left + 1) ? (right - left + 1) : max;
        right++;
    }

    return max;
}
